C166 COMPILER V7.53.0.0, IO                                                                04/30/2018 10:06:50 PAGE 1   


C166 COMPILER V7.53.0.0, COMPILATION OF MODULE IO
OBJECT MODULE PLACED IN IO.OBJ
COMPILER INVOKED BY: C:\Keil\C166\BIN\C166.EXE IO.C COMPACT OPTIMIZE(0,SPEED) BROWSE MOD167 DEBUG TABS(2) 

 stmt lvl     source

    1         //****************************************************************************
    2         // @Module        Ports
    3         // @Filename      IO.C
    4         // @Project       v2.dav
    5         //----------------------------------------------------------------------------
    6         // @Controller    Infineon C164CI-8E
    7         //
    8         // @Compiler      KEIL C166
    9         //
   10         // @Codegenerator DAvE 2-0-0
   11         //
   12         // @Description   This file contains all functions that use the general IO ports.
   13         //                
   14         //
   15         //----------------------------------------------------------------------------
   16         // @Date          30.04.2018 08:35:48
   17         //
   18         //****************************************************************************
   19         
   20         
   21         
   22         
   23         
   24         
   25         
   26         //****************************************************************************
   27         // @Project Includes
   28         //****************************************************************************
   29         
   30         #include "MAIN.H"
   31         
   32         // USER CODE BEGIN (IO_General,1)
   33         
   34         // USER CODE END
   35         
   36         
   37         //***************************************************************************
   38         // @Global Variables
   39         //***************************************************************************
   40         
   41         // USER CODE BEGIN (IO_General,2)
   42         volatile unsigned key_cnt = 0;
   43         unsigned tsk2_cnt = 0;
   44         
   45         unsigned char saved_key_port;
   46         
   47         static volatile bit key_flag = 0;
   48         // USER CODE END
   49         
   50         
   51         //****************************************************************************
   52         // @Function      void IO_vInit(void)
   53         //
   54         //----------------------------------------------------------------------------
   55         // @Description   This function initializes the IO component. It effects all
C166 COMPILER V7.53.0.0, IO                                                                04/30/2018 10:06:50 PAGE 2   

   56         //                necessary configurations of the SFR, depending on the selected
   57         //                operating mode.
   58         //                Note:
   59         //                Only those pins that are initialized are used as general IO.
   60         //                If the alternate function of a pin is used, this pin is
   61         //                initialized in the initialization function of the peripheral.
   62         //
   63         //----------------------------------------------------------------------------
   64         // @Returnvalue   none
   65         //
   66         //----------------------------------------------------------------------------
   67         // @Parameters    none
   68         //
   69         //----------------------------------------------------------------------------
   70         // @Date          30.04.2018 08:35:48
   71         //
   72         //****************************************************************************
   73         
   74         void IO_vInit(void)
   75         {
   76  1        /// P8.0 .. P8.7  switch on standard TTL input levels
   77  1        /// P3.8 .. P3.15 switch on standard TTL input levels
   78  1        /// P3.0 .. P3.7  switch on standard TTL input levels
   79  1        PICON = 0x0000;
   80  1      
   81  1        /// no pin of port 0 low is used as general IO
   82  1      
   83  1        /// no pin of port 0 high is used as general IO
   84  1      
   85  1        //  initializes port 1 low
   86  1        /// P1L.4 is used as general IO
   87  1        /// -  the pin is configured as output
   88  1        /// -  the pin status is low level
   89  1        /// P1L.5 is used as general IO
   90  1        /// -  the pin is configured as output
   91  1        /// -  the pin status is low level
   92  1        /// P1L.6 is used as general IO
   93  1        /// -  the pin is configured as output
   94  1        /// -  the pin status is low level
   95  1        /// P1L.7 is used as general IO
   96  1        /// -  the pin is configured as output
   97  1        /// -  the pin status is low level
   98  1        P1L   = 0x00;          // set port data register
   99  1        DP1L  = 0xF0;          // set port direction register
  100  1      
  101  1        //  initializes port 1 high
  102  1        /// P1H.4 is used as general IO
  103  1        /// -  the pin is configured as input
  104  1        /// P1H.5 is used as general IO
  105  1        /// -  the pin is configured as input
  106  1        /// P1H.6 is used as general IO
  107  1        /// -  the pin is configured as input
  108  1        /// P1H.7 is used as general IO
  109  1        /// -  the pin is configured as input
  110  1        P1H   = 0x00;          // set port data register
  111  1        DP1H  = 0x00;          // set port direction register
  112  1      
  113  1        /// no pin of port 3 is used as general IO
  114  1      
  115  1        /// no pin of port 4 is used as general IO
  116  1      
  117  1        /// no pin of port 5 is used as general input
C166 COMPILER V7.53.0.0, IO                                                                04/30/2018 10:06:50 PAGE 3   

  118  1      
  119  1        /// no pin of port 8 is used as general IO
  120  1      
  121  1      
  122  1        // USER CODE BEGIN (IO_Init,1)
  123  1      
  124  1        // USER CODE END
  125  1      
  126  1      }
  127         
  128         
  129         // USER CODE BEGIN (IO_General,3)
  130         void tasten_tsk (void) _task_ 2 {
  131  1        while (1) {
  132  2          tsk2_cnt++;
  133  2          saved_key_port = (unsigned char) KEY_PORT;
  134  2          if ((saved_key_port)) {
  135  3            key_cnt++;
  136  3            
  137  3            if (key_cnt == DEBOUNCE_THRESHOLD)
  138  3              key_flag = 1;
  139  3          }
  140  2          else
  141  2            key_cnt = 0;
  142  2          
  143  2          os_wait(K_IVL, 20, 0);
  144  2        }
  145  1      }
  146         
  147         bit KeyDown() {
  148  1        if (key_flag) {
  149  2          key_flag = 0;
  150  2          return 1;
  151  2        }
  152  1        else
  153  1          return 0;
  154  1      }
  155         
  156         char GetKey() {
  157  1        switch (saved_key_port) {
  158  2          case 1:
  159  2            return '1';
  160  2          case 2:
  161  2            return '2';
  162  2          case 4:
  163  2            return '3';
  164  2          case 8:
  165  2            return '4';
  166  2          case 3:
  167  2            return 'C';
  168  2          case 12:
  169  2            return 'R';
  170  2          default:
  171  2            return -1;
  172  2        }
  173  1      }
  174         
  175         
  176         void ToggleLED(unsigned char ch) {
  177  1        switch (ch) {
  178  2          case '1':     
  179  2            if (IO_bReadPin(P1L_4))
C166 COMPILER V7.53.0.0, IO                                                                04/30/2018 10:06:50 PAGE 4   

  180  2              IO_vResetPin(P1L_4);
  181  2            else
  182  2              IO_vSetPin(P1L_4);
  183  2            break;
  184  2            
  185  2          case '2':     
  186  2            if (IO_bReadPin(P1L_5))
  187  2              IO_vResetPin(P1L_5);
  188  2            else
  189  2              IO_vSetPin(P1L_5);
  190  2            break;
  191  2            
  192  2          case '3':     
  193  2            if (IO_bReadPin(P1L_6))
  194  2              IO_vResetPin(P1L_6);
  195  2            else
  196  2              IO_vSetPin(P1L_6);
  197  2            break;
  198  2            
  199  2          case '4':     
  200  2            if (IO_bReadPin(P1L_7))
  201  2              IO_vResetPin(P1L_7);
  202  2            else
  203  2              IO_vSetPin(P1L_7);
  204  2            break;
  205  2          }
  206  1      }
  207         // USER CODE END
  208         


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         354     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =           5     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =           1     --------
  INIT'L SIZE      =          14     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
